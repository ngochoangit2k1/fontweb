import ProductCategory from '@/components/Products/ProductCategory'
import Head from 'next/head'
import React, { useEffect, useState } from 'react'
import ReactPaginate from 'react-paginate'

const fontVH = ({ categoryFont }) => {
	// useEffect(() => {
	// 	window.scroll(0, 0)
	// }, [])
	const [users, setUsers] = useState(categoryFont)
	const [pageNumber, setPageNumber] = useState(0)

	const usersPerPage = 8
	const pagesVisited = pageNumber * usersPerPage

	const displayUsers = users
		.slice(pagesVisited, pagesVisited + usersPerPage)
		.map((item, id) => {
			return (
				<>
					<ProductCategory item={item} id={id} />
				</>
			)
		})

	const pageCount = Math.ceil(users.length / usersPerPage)

	const changePage = ({ selected }) => {
		setPageNumber(selected)
	}

	return (
		<>
			<Head>
				<title>Font việt hóa</title>
				<meta name='description' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
				<link rel='icon' href='/favicon.ico' />
			</Head>

			<div className='w-full mt-32'>
				<h2 className='font-bold text-3xl ml-[8%] mt-16'>
					Font việt hóa ( {categoryFont.length} font){' '}
				</h2>

				<div className='w-[85%]	 mx-auto mt-8 grid grid-cols-4 gap-6 max-xl:w-[90%] max-lg:grid-cols-2 max-xl:grid-cols-3 max-sm:grid-cols-1'>
					{displayUsers}
				</div>
				<div className='mt-10  w-[30%] mx-auto '>
					<ReactPaginate
						previousLabel={'Previous'}
						nextLabel={'Next'}
						pageCount={pageCount}
						onPageChange={changePage}
						containerClassName={'paginationBttns'}
						previousLinkClassName={'previousBttn'}
						nextLinkClassName={'nextBttn'}
						disabledClassName={'paginationDisabled'}
						activeClassName={'paginationActive'}
						onClick={() => window.scroll(0, 0)}
					/>
				</div>
			</div>
		</>
	)
}

export default fontVH

export async function getStaticProps() {
	const response = await fetch(`http://localhost:4000/HomeData`)
	const data = await response.json()

	const datas = data.filter(e => e.category === 'FontVH')

	return {
		props: {
			categoryFont: datas,
		},
	}
}
